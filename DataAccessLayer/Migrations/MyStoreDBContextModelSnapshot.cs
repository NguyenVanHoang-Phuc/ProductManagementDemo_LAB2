// <auto-generated />
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(MyStoreDBContext))]
    partial class MyStoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjects.AccountMember", b =>
                {
                    b.Property<string>("MemberID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberRole")
                        .HasColumnType("int");

                    b.HasKey("MemberID");

                    b.ToTable("AccountMembers");

                    b.HasData(
                        new
                        {
                            MemberID = "PS0001",
                            EmailAddress = "admin@CompanyName.com",
                            FullName = "Administrator",
                            MemberPassword = "@1",
                            MemberRole = 1
                        },
                        new
                        {
                            MemberID = "PS0002",
                            EmailAddress = "staff@CompanyName.com",
                            FullName = "Staff",
                            MemberPassword = "@2",
                            MemberRole = 2
                        },
                        new
                        {
                            MemberID = "PS0003",
                            EmailAddress = "member1@CompanyName.com",
                            FullName = "Member 1",
                            MemberPassword = "@3",
                            MemberRole = 3
                        },
                        new
                        {
                            MemberID = "PS0004",
                            EmailAddress = "member2@CompanyName.com",
                            FullName = "Member 2",
                            MemberPassword = "@3",
                            MemberRole = 3
                        });
                });

            modelBuilder.Entity("BusinessObjects.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Confections"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Dairy Products"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Grains/Cereals"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Meat/Poultry"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Produce"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Seafood"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 3,
                            ProductName = "Chai",
                            UnitPrice = 18.00m,
                            UnitsInStock = (short)12
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 1,
                            ProductName = "Chang",
                            UnitPrice = 19.00m,
                            UnitsInStock = (short)23
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryID = 2,
                            ProductName = "Aniseed Syrup",
                            UnitPrice = 10.00m,
                            UnitsInStock = (short)23
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryID = 2,
                            ProductName = "Chef Anton's Cajun Seasoning",
                            UnitPrice = 22.00m,
                            UnitsInStock = (short)34
                        },
                        new
                        {
                            ProductID = 5,
                            CategoryID = 2,
                            ProductName = "Chef Anton's Gumbo Mix",
                            UnitPrice = 21.35m,
                            UnitsInStock = (short)45
                        },
                        new
                        {
                            ProductID = 6,
                            CategoryID = 2,
                            ProductName = "Grandma's Boysenberry Spread",
                            UnitPrice = 25.00m,
                            UnitsInStock = (short)21
                        },
                        new
                        {
                            ProductID = 7,
                            CategoryID = 7,
                            ProductName = "Uncle Bob's Organic Dried Pears",
                            UnitPrice = 30.00m,
                            UnitsInStock = (short)22
                        },
                        new
                        {
                            ProductID = 8,
                            CategoryID = 2,
                            ProductName = "Northwoods Cranberry Sauce",
                            UnitPrice = 40.00m,
                            UnitsInStock = (short)10
                        },
                        new
                        {
                            ProductID = 9,
                            CategoryID = 6,
                            ProductName = "Mishi Kobe Niku",
                            UnitPrice = 97.00m,
                            UnitsInStock = (short)12
                        },
                        new
                        {
                            ProductID = 10,
                            CategoryID = 8,
                            ProductName = "Ikura",
                            UnitPrice = 31.00m,
                            UnitsInStock = (short)13
                        });
                });

            modelBuilder.Entity("BusinessObjects.Product", b =>
                {
                    b.HasOne("BusinessObjects.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObjects.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
